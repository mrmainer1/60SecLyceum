using Project.EntenEller.Base.Scripts.Advanced.Behaviours.Loop;using UnityEngine;namespace Project.Scripts.Player{    public class PlayerJumper : EEBehaviourUpdate    {        [SerializeField] private CharacterController controller;        [SerializeField] private float gravity = -10f;        [SerializeField] private float jumpHeight = 2f;        [SerializeField] private Transform groundCheck;        [SerializeField] private float groundDistance = 0.4f;        [SerializeField] private LayerMask groundMask;        private Vector3 velocity;        private bool isGrounded;        private bool canJump = true;        protected override void EEUpdate()        {            base.EEUpdate();            CheckGround();            Jump();            Gravity();        }        private void Jump()        {            if (!canJump) return;            if (Input.GetButtonDown("Jump") && isGrounded)            {                velocity.y = Mathf.Sqrt(jumpHeight * -2f * gravity);            }        }        private void Gravity()        {            if (isGrounded && velocity.y < 0)                velocity.y = -2f;            velocity.y += gravity * Time.deltaTime;            controller.Move(velocity * Time.deltaTime);        }        private void CheckGround() => isGrounded = Physics.CheckSphere(groundCheck.position, groundDistance, groundMask);        public void StopJump() => canJump = false;        public void StartJump() => canJump = true;    }}